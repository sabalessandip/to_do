AWSTemplateFormatVersion: "2010-09-09"
Description: This template creates application load balancers for three tier app's frontend and gateway

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC where the ALB and Target Group will be created.
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of public subnets to associate with the ALBs.
  FrontendALBSecGrpId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the security group created for frontend load balancer.
  GatewayALBSecGrpId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The ID of the security group created for gateway load balancer.

Mappings: 
  Project:
    Name:
      Value: "three-tier-app"

Resources:
  # Create the application load balancer for frontend service
  FrontendALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ["-", [!FindInMap [Project, Name, Value], "frontend-alb"]]
      Scheme: internet-facing
      Subnets: !Ref SubnetIds
      SecurityGroups: [!Ref FrontendALBSecGrpId]
      Type: application
      Tags:
        - Key: Project
          Value: !FindInMap [Project, Name, Value]
  FrontendTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [!FindInMap [Project, Name, Value], "frontend-tg"]]
      VpcId: !Ref VPCId
      Protocol: HTTP
      Port: 80
      TargetType: ip
      Tags:
        - Key: Project
          Value: !FindInMap [Project, Name, Value]
  FrontendTGLS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref FrontendALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref FrontendTG

  # Create the application load balancer for gateway service
  GatewayALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ["-", [!FindInMap [Project, Name, Value], "gateway-alb"]]
      Scheme: internet-facing
      Subnets: !Ref SubnetIds
      SecurityGroups: [!Ref GatewayALBSecGrpId]
      Type: application
      Tags:
        - Key: Project
          Value: !FindInMap [Project, Name, Value]
  GatewayTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ["-", [!FindInMap [Project, Name, Value], "gateway-tg"]]
      VpcId: !Ref VPCId
      Protocol: HTTP
      Port: 80
      TargetType: ip
      HealthCheckPath: /health
      Tags:
        - Key: Project
          Value: !FindInMap [Project, Name, Value]
  GatewayTGLS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref GatewayALB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GatewayTG

Outputs:
  FrontendALBId:
    Description: Frontend load balancer
    Value: !Ref FrontendALB
  GatewayALBId:
    Description: Gateway load balancer
    Value: !Ref GatewayALB
  FrontendTGARN:
    Description: Frontend target group
    Value: !Ref FrontendTG
  GatewayTGARN:
    Description: Gateway target group
    Value: !Ref GatewayTG